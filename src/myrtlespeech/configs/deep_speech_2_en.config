speech_to_text {
  alphabet: " abcdefghijklmnopqrstuvwxyz'_";

  pre_process_step {
    stage: TRAIN_AND_EVAL;
    mfcc {
      n_mfcc: 80;
      win_length: 400;
      hop_length: 160;
    }
  }

  pre_process_step {
    stage: TRAIN_AND_EVAL;
    standardize {
    }
  }

  deep_speech_2 {
    conv_block {
      conv2d {
        output_channels: 32;
        kernel_feature: 41;
        kernel_time: 11;
        stride_feature: 2;
        stride_time: 2;
        padding_mode: SAME;
        bias: true;
      }
      batch_norm: true;
      activation {
        hardtanh {
          min_val: 0.0;
          max_val: 20.0;
        }
      }
    }

    conv_block {
      conv2d {
        output_channels: 32;
        kernel_feature: 21;
        kernel_time: 11;
        stride_feature: 2;
        stride_time: 1;
        padding_mode: SAME;
        bias: true;
      }
      batch_norm: true;
      activation {
        hardtanh {
          min_val: 0.0;
          max_val: 20.0;
        }
      }
    }

    rnn {
      rnn_type: GRU;
      hidden_size: 2560;
      num_layers: 3;
      bias: true;
      bidirectional: false;
      batch_norm: true;
    }

    lookahead_block {
      lookahead {
        context: 80;
      }
      activation {
        identity {}
      }
    }

    fully_connected {
      num_hidden_layers: 1;
      hidden_size: 1024;
      activation {
        hardtanh {
          min_val: 0.0;
          max_val: 20.0;
        }
      }
      batch_norm: true;
    }
  }

  ctc_loss {
    blank_index: 28;
    reduction: SUM;
  }

  ctc_greedy_decoder {
    blank_index: 28;
  }
}

train_config {
  batch_size: 32;
  epochs: 1000;
  adam {
    learning_rate: 0.0001;
  }
  dataset {
    librispeech {
      root: "/data/";
      subset: TRAIN_CLEAN_100;
      subset: TRAIN_CLEAN_360;
      max_secs {
        value: 16.7;
      }
    }
  }
  shuffle_batches_before_every_epoch: true;
}

eval_config {
  batch_size: 32;
  dataset {
    librispeech {
      root: "/data/";
      subset: DEV_CLEAN;
    }
  }
}

syntax = "proto3";

package myrtlespeech.protos;

import "myrtlespeech/protos/stage.proto";


// Preprocessing steps to apply to the input data.
message PreProcessStep {
  Stage stage = 1;

  oneof pre_process_step {
    MFCC mfcc = 2;
    LogMelFB log_mel_filter_bank = 6;
    Standardize standardize = 3;
    ContextFrames context_frames = 4;
    SpecAugment spec_augment = 5;
    Downsample downsample = 7;
  }
}

// Computes Mel-frequency cepstral coefficients (MFCC).
message MFCC {
  // Number of mfc coefficients to retain.
  uint32 n_mfcc = 1;

  // Window size in number of frames.
  uint32 win_length = 2;

  // Step between successive windows in number of frames.
  uint32 hop_length = 3;
}

// Computes Log Mel-frequency Filter Banks.
message LogMelFB {
  // Number of mel coefficients.
  uint32 n_mels = 1;

  // Window size in number of frames.
  uint32 win_length = 2;

  // Step between successive windows in number of frames.
  uint32 hop_length = 3;
}


// Applies SpecAugment transformation (https://arxiv.org/pdf/1904.08779.pdf).
message SpecAugment {
  // Number of features to mask will be drawn from Uniform[0, feature_mask].
  uint32 feature_mask = 1;

  // Number of time steps to mask will be drawn from Uniform[0, time_mask].
  uint32 time_mask = 2;

  // Number of feature masks to apply.
  uint32 n_feature_masks = 3;

  // Number of time masks to apply.
  uint32 n_time_masks = 4;
}


// Standardize the input.
message Standardize {
}


message ContextFrames {
  // Number of context frames (channels) to add.
  uint32 n_context = 1;
}

message Downsample {
  // Rate at which to downsample input.
  uint32 subsample = 1;
}
